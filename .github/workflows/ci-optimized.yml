# CI Pipeline - Continuous Integration với Path-based Optimization
# Trigger: push/PR vào develop branch
# Mục đích: Test code, build image, security scan với optimization

name: 🔧 Continuous Integration

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  REGISTRY: docker.io

jobs:
  # Job 0: Detect Changes để optimize workflow
  detect-changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      docs-only: ${{ steps.changes.outputs.docs-only }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect file changes
      id: changes
      run: |
        # Detect changes in backend
        if git diff --name-only HEAD~1 HEAD | grep -E '^tms-server/|^docker-compose\.yml|^\.github/workflows/' > /dev/null; then
          echo "backend=true" >> $GITHUB_OUTPUT
        else
          echo "backend=false" >> $GITHUB_OUTPUT
        fi
        
        # Detect changes in frontend
        if git diff --name-only HEAD~1 HEAD | grep -E '^tms-client/|^docker-compose\.yml|^\.github/workflows/' > /dev/null; then
          echo "frontend=true" >> $GITHUB_OUTPUT
        else
          echo "frontend=false" >> $GITHUB_OUTPUT
        fi
        
        # Check if only docs changed
        if git diff --name-only HEAD~1 HEAD | grep -v -E '\.(md|txt|yml)$' | wc -l | grep -q '^0$'; then
          echo "docs-only=true" >> $GITHUB_OUTPUT
        else
          echo "docs-only=false" >> $GITHUB_OUTPUT
        fi

  # Job 1: Test Backend (chỉ chạy khi backend thay đổi)
  test-backend:
    name: 🧪 Backend Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true' && needs.detect-changes.outputs.docs-only == 'false'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'eclipse-temurin'
        cache: maven

    - name: Run unit tests
      working-directory: ./tms-server
      run: ./mvnw clean test -Dspring.profiles.active=test

    - name: Run integration tests with Testcontainers
      working-directory: ./tms-server
      run: ./mvnw verify -Dspring.profiles.active=test

    - name: Generate JaCoCo report
      working-directory: ./tms-server
      run: ./mvnw jacoco:report

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./tms-server/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backend-test-results
        path: |
          tms-server/target/surefire-reports/
          tms-server/target/site/jacoco/

  # Job 2: Test Frontend (chỉ chạy khi frontend thay đổi)
  test-frontend:
    name: 🧪 Frontend Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true' && needs.detect-changes.outputs.docs-only == 'false'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: tms-client/package-lock.json

    - name: Install dependencies
      working-directory: ./tms-client
      run: npm ci

    - name: Run linting
      working-directory: ./tms-client
      run: npm run lint

    - name: Run tests
      working-directory: ./tms-client
      run: npm run test:ci

    - name: Build application
      working-directory: ./tms-client
      run: npm run build

    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: tms-client/dist/

  # Job 3: Security Scan (luôn chạy trừ khi chỉ docs thay đổi)
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: [detect-changes, test-backend, test-frontend]
    if: always() && needs.detect-changes.outputs.docs-only == 'false'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Check vulnerabilities
      run: |
        if [ -s trivy-results.sarif ]; then
          echo "⚠️ Security vulnerabilities found!"
          exit 1
        else
          echo "✅ No security vulnerabilities detected"
        fi

  # Job 4: Build Docker Images (smart build based on changes)
  build-docker:
    name: 🐳 Build Images
    runs-on: ubuntu-latest
    needs: [detect-changes, test-backend, test-frontend, security-scan]
    if: github.ref == 'refs/heads/develop' && needs.detect-changes.outputs.docs-only == 'false'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build Backend Image (chỉ khi backend thay đổi)
    - name: Extract metadata for backend
      if: needs.detect-changes.outputs.backend-changed == 'true'
      id: meta-backend
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/tms-server
        tags: |
          type=ref,event=branch
          type=sha,prefix=dev-

    - name: Build and push backend image
      if: needs.detect-changes.outputs.backend-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./tms-server
        file: ./tms-server/Dockerfile
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build Frontend Image (chỉ khi frontend thay đổi)
    - name: Extract metadata for frontend
      if: needs.detect-changes.outputs.frontend-changed == 'true'
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/tms-client
        tags: |
          type=ref,event=branch
          type=sha,prefix=dev-

    - name: Build and push frontend image
      if: needs.detect-changes.outputs.frontend-changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./tms-client
        file: ./tms-client/Dockerfile
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build summary
      run: |
        echo "## 🐳 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Changed | Action |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|--------|" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.detect-changes.outputs.backend-changed }}" == "true" ]; then
          echo "| Backend | ✅ Yes | 🐳 Built & Pushed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Backend | ❌ No | ⏭️ Skipped |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.detect-changes.outputs.frontend-changed }}" == "true" ]; then
          echo "| Frontend | ✅ Yes | 🐳 Built & Pushed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Frontend | ❌ No | ⏭️ Skipped |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Optimization Result:** Only changed components were built and tested! 🚀" >> $GITHUB_STEP_SUMMARY
